MERGE INTO Customer_Dim cd
USING (
    SELECT 
        CustomerID AS Cust_Key, 
        Name AS Full_Name, 
        City AS City_Name, 
        State AS State_Name
    FROM 
        Customers
) src
ON (cd.Cust_Key = src.Cust_Key)
WHEN MATCHED THEN
    UPDATE SET
        cd.Full_Name = src.Full_Name,
        cd.City_Name = src.City_Name,
        cd.State_Name = src.State_Name
WHEN NOT MATCHED THEN
    INSERT (Cust_Key, Full_Name, City_Name, State_Name)
    VALUES (src.Cust_Key, src.Full_Name, src.City_Name, src.State_Name);
    

MERGE INTO Store_Dim sd
USING (
    SELECT 
        StoreID AS Store_Key, 
        StoreName AS Store_Title, 
        City AS Location_City, 
        State AS Location_State
    FROM 
        Stores
) src
ON (sd.Store_Key = src.Store_Key)
WHEN MATCHED THEN
    UPDATE SET
        sd.Store_Title = src.Store_Title,
        sd.Location_City = src.Location_City,
        sd.Location_State = src.Location_State
WHEN NOT MATCHED THEN
    INSERT (Store_Key, Store_Title, Location_City, Location_State)
    VALUES (src.Store_Key, src.Store_Title, src.Location_City, src.Location_State);
    

MERGE INTO Product_Dim pd
USING (
    SELECT 
        ProductID AS Prod_Key, 
        ProductName AS Prod_Title, 
        Category AS Prod_Category
    FROM 
        Products
) src
ON (pd.Prod_Key = src.Prod_Key)
WHEN MATCHED THEN
    UPDATE SET
        pd.Prod_Title = src.Prod_Title,
        pd.Prod_Category = src.Prod_Category
WHEN NOT MATCHED THEN
    INSERT (Prod_Key, Prod_Title, Prod_Category)
    VALUES (src.Prod_Key, src.Prod_Title, src.Prod_Category);
    

MERGE INTO Date_Dim dd
USING (
    SELECT 
        DISTINCT SalesDate AS Date_Key, -- Add DISTINCT here
        EXTRACT(DAY FROM SalesDate) AS Day_Num, 
        EXTRACT(MONTH FROM SalesDate) AS Month_Num, 
        EXTRACT(YEAR FROM SalesDate) AS Year_Num, 
        TO_CHAR(SalesDate, 'Q') AS Quarter_Num, 
        TO_CHAR(SalesDate, 'Day') AS Weekday_Name
    FROM 
        Sales
) src
ON (dd.Date_Key = src.Date_Key)
WHEN MATCHED THEN
    UPDATE SET
        dd.Day_Num = src.Day_Num,
        dd.Month_Num = src.Month_Num,
        dd.Year_Num = src.Year_Num,
        dd.Quarter_Num = src.Quarter_Num,
        dd.Weekday_Name = src.Weekday_Name
WHEN NOT MATCHED THEN
    INSERT (Date_Key, Day_Num, Month_Num, Year_Num, Quarter_Num, Weekday_Name)
    VALUES (src.Date_Key, src.Day_Num, src.Month_Num, src.Year_Num, src.Quarter_Num, src.Weekday_Name);
    

MERGE INTO Time_Dim td
USING (
    SELECT 
        DISTINCT SalesTime AS Time_Key, -- Add DISTINCT here
        EXTRACT(HOUR FROM SalesTime) AS Hour_Num, 
        EXTRACT(MINUTE FROM SalesTime) AS Minute_Num, 
        CASE 
            WHEN EXTRACT(HOUR FROM SalesTime) BETWEEN 6 AND 12 THEN 'Morning'
            WHEN EXTRACT(HOUR FROM SalesTime) BETWEEN 12 AND 18 THEN 'Afternoon'
            WHEN EXTRACT(HOUR FROM SalesTime) BETWEEN 18 AND 24 THEN 'Evening'
            ELSE 'Night'
        END AS Time_Of_Day
    FROM 
        Sales
) src
ON (td.Time_Key = src.Time_Key)
WHEN MATCHED THEN
    UPDATE SET
        td.Hour_Num = src.Hour_Num,
        td.Minute_Num = src.Minute_Num,
        td.Time_Of_Day = src.Time_Of_Day
WHEN NOT MATCHED THEN
    INSERT (Time_Key, Hour_Num, Minute_Num, Time_Of_Day)
    VALUES (src.Time_Key, src.Hour_Num, src.Minute_Num, src.Time_Of_Day);
    

MERGE INTO SalesPerson_Dim spd
USING (
    SELECT 
        SalesPersonID AS SalesRep_Key, 
        Name AS Rep_FullName, 
        StoreID AS Assigned_StoreKey
    FROM 
        Employees
) src
ON (spd.SalesRep_Key = src.SalesRep_Key)
WHEN MATCHED THEN
    UPDATE SET
        spd.Rep_FullName = src.Rep_FullName,
        spd.Assigned_StoreKey = src.Assigned_StoreKey
WHEN NOT MATCHED THEN
    INSERT (SalesRep_Key, Rep_FullName, Assigned_StoreKey)
    VALUES (src.SalesRep_Key, src.Rep_FullName, src.Assigned_StoreKey);
    

MERGE INTO Sales_Fact sf
USING (
    SELECT 
        sd.SalesDetailID AS Sales_Key, -- Use SalesDetailID for uniqueness
        s.SalesDate AS Sale_DateKey, 
        s.SalesTime AS Sale_TimeKey, 
        s.InvoiceNumber AS Invoice_No, 
        s.SalesPersonID AS SalesRep_Key, 
        s.StoreID AS Store_Key, 
        s.CustomerID AS Cust_Key, 
        sd.ProductID AS Prod_Key, 
        sd.Quantity AS Item_Quantity, 
        sd.UnitPrice AS Sale_Cost, 
        sd.TotalPrice AS Total_Revenue
    FROM 
        Sales s
    JOIN 
        SalesDetails sd ON s.InvoiceNumber = sd.InvoiceNumber
) src
ON (sf.Sales_Key = src.Sales_Key)
WHEN MATCHED THEN
    UPDATE SET
        sf.Sale_DateKey = src.Sale_DateKey,
        sf.Sale_TimeKey = src.Sale_TimeKey,
        sf.Invoice_No = src.Invoice_No,
        sf.SalesRep_Key = src.SalesRep_Key,
        sf.Store_Key = src.Store_Key,
        sf.Cust_Key = src.Cust_Key,
        sf.Prod_Key = src.Prod_Key,
        sf.Item_Quantity = src.Item_Quantity,
        sf.Sale_Cost = src.Sale_Cost,
        sf.Total_Revenue = src.Total_Revenue
WHEN NOT MATCHED THEN
    INSERT (Sales_Key, Sale_DateKey, Sale_TimeKey, Invoice_No, SalesRep_Key, Store_Key, Cust_Key, Prod_Key, Item_Quantity, Sale_Cost, Total_Revenue)
    VALUES (src.Sales_Key, src.Sale_DateKey, src.Sale_TimeKey, src.Invoice_No, src.SalesRep_Key, src.Store_Key, src.Cust_Key, src.Prod_Key, src.Item_Quantity, src.Sale_Cost, src.Total_Revenue);
