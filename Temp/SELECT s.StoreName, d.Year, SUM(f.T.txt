SELECT s.StoreName, d.Year, SUM(f.TotalSales) AS YearlyRevenue
FROM FactSales f
JOIN DimStore s ON f.StoreID = s.StoreID
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY CUBE (s.StoreName, d.Year)
ORDER BY s.StoreName, d.Year;

SELECT p.ProductName, SUM(f.TotalSales) AS TotalRevenue
FROM FactSales f
JOIN DimProduct p ON f.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY TotalRevenue DESC;

SELECT t.Hour, t.TimeOfDay, SUM(f.TotalSales) AS SalesAmount
FROM FactSales f
JOIN DimTime t ON f.SalesTimeKey = t.TimeKey
GROUP BY CUBE (t.Hour, t.TimeOfDay)
ORDER BY SalesAmount DESC;

SELECT d.Year, d.Quarter, COUNT(DISTINCT f.CustomerID) AS UniqueCustomers
FROM FactSales f
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY CUBE (d.Year, d.Quarter)
ORDER BY d.Year, d.Quarter;

SELECT p.Category, d.Year, d.Month, SUM(f.TotalSales) AS TotalRevenue
FROM FactSales f
JOIN DimProduct p ON f.ProductID = p.ProductID
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY CUBE (p.Category, d.Year, d.Month)
ORDER BY p.Category, d.Year, d.Month;

SELECT s.StoreName, d.Year, SUM(f.TotalSales) AS AnnualSales
FROM FactSales f
JOIN DimStore s ON f.StoreID = s.StoreID
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY ROLLUP (s.StoreName, d.Year)
ORDER BY s.StoreName, d.Year;

SELECT s.StoreName, d.Year, SUM(f.TotalSales) AS AnnualSales
FROM FactSales f
JOIN DimStore s ON f.StoreID = s.StoreID
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY ROLLUP (s.StoreName, d.Year)
ORDER BY s.StoreName, d.Year;

SELECT s.StoreName, d.Year, SUM(f.TotalSales) AS AnnualSales
FROM FactSales f
JOIN DimStore s ON f.StoreID = s.StoreID
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY ROLLUP (s.StoreName, d.Year)
ORDER BY s.StoreName, d.Year;

SELECT d.Weekday, SUM(f.TotalSales) AS TotalSales
FROM FactSales f
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY d.Weekday
ORDER BY TotalSales DESC;

SELECT d.Year, d.Month, 
       SUM(f.TotalSales) AS MonthlyRevenue,
       LAG(SUM(f.TotalSales)) OVER (PARTITION BY d.Year ORDER BY d.Month) AS PrevMonthRevenue,
       (SUM(f.TotalSales) - LAG(SUM(f.TotalSales)) OVER (PARTITION BY d.Year ORDER BY d.Month)) AS RevenueChange
FROM FactSales f
JOIN DimDate d ON f.SalesDateKey = d.DateKey
GROUP BY d.Year, d.Month
ORDER BY d.Year, d.Month;
